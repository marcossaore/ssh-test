name: Test

on:
  push:
    branches:
      - 'master'
  # pull_request:

jobs:
  build:

    runs-on: "ubuntu-20.04"

    steps:

    - uses: actions/checkout@v2

    - name: GET ENV
      run: echo ${{ secrets.PROPS }} > .env

    - uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.HOST_PORT || 22 }}
        source: "."
        target: "app"

    - uses: JimCronqvist/action-ssh@master
      with:
        host: '${{ secrets.USER }}@${{ secrets.HOST }}:${{ secrets.HOST_PORT || 22 }}' 
        privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
        command: |
          cd app
          npm i
          npm start

    # - name: ls in ssh
    #   run: echo $SSH_PRIVATE_KEY > id_rsa && chmod 400 id_rsa

    # - name: cat id_rsa
    #   run: cat id_rsa
        
    # - name: access to host
    #   run: ssh -i id_rsa ${{ secrets.USER }}@${{ secrets.HOST }} -p ${{ secrets.HOST_PORT }} ls -al

    # - name: set ssh private key - 1
    #   run: echo ${{ secrets.SSH_PRIVATE_KEY }} > /root/.ssh/id_rsa

    # - name: set ssh private key - 2
    #   run: chmod 400 /root/.ssh/id_rsa

    # - name: set ssh private key - 3
    #   run: ssh-keygen -f /root/.ssh/id_rsa -p

    # - name: run test
    #   run: ssh-keyscan -H server >> /root/.ssh/known_hosts && ssh root@server -t  'bash -i -c "ls -al"'

    # - name: run client
    #   run: docker run --rm -it ubuntu-client bin/bash script.sh